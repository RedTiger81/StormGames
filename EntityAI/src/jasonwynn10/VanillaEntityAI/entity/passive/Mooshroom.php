<?php
declare(strict_types=1);
namespace jasonwynn10\VanillaEntityAI\entity\passive;


use pocketmine\entity\Entity;
use pocketmine\entity\EntityFactory;
use pocketmine\item\Bowl;
use pocketmine\item\ItemFactory;
use pocketmine\item\ItemIds;
use pocketmine\item\Shears;
use pocketmine\nbt\tag\CompoundTag;
use pocketmine\network\mcpe\protocol\LevelSoundEventPacket;
use pocketmine\network\mcpe\protocol\types\entity\EntityLegacyIds;
use pocketmine\network\mcpe\protocol\types\entity\EntityMetadataProperties;
use pocketmine\player\Player;

class Mooshroom extends Cow {
	public const NETWORK_ID = EntityLegacyIds::MOOSHROOM;
	public $width = 1.781;
	public $height = 1.875;


	public function initEntity(CompoundTag $nbt) : void {
		parent::initEntity($nbt);

	}

	/**
	 * @param int $tickDiff
	 *
	 * @return bool
	 */
	public function entityBaseTick(int $tickDiff = 1) : bool {
		return parent::entityBaseTick($tickDiff); // TODO: Change the autogenerated stub
		// TODO: Sheep follow players holding wheat within 8 blocks
	}

	/**
	 * @return string
	 */
	public function getName() : string {
		return "Mooshroom";
	}

	/**
	 * @param Entity $entity
	 */
	public function onCollideWithEntity(Entity $entity) : void {
		// TODO:
	}

	public function onPlayerLook(Player $player) : void {
		$hand = $player->getInventory()->getItemInHand();
		if(!$this->isBaby() and $hand instanceof Shears) {
			$this->getNetworkProperties()->setString(EntityMetadataProperties::INTERACTIVE_TAG, "Shear");
		}
		if(!$this->isBaby() and $hand instanceof Bowl) {
			$this->getNetworkProperties()->setString(EntityMetadataProperties::INTERACTIVE_TAG,  "Mushroom Stew");
		}
		parent::onPlayerLook($player);
	}

	public function onPlayerInteract(Player $player) : void {
		$hand = $player->getInventory()->getItemInHand();
		if(!$this->isBaby() and $hand instanceof Shears) {
			$this->shear();
			$hand->applyDamage(1);
			$player->getInventory()->setItemInHand($hand);
			$this->getWorld()->broadcastLevelEvent($player->getPosition(), LevelSoundEventPacket::SOUND_SHEAR, 0);
		}
		if(!$this->isBaby() and $hand instanceof Bowl) {
			$hand = ItemFactory::get(ItemIds::MUSHROOM_STEW);
			$player->getInventory()->setItemInHand($hand);
		}
		parent::onPlayerInteract($player);
	}

	public function shear() : self {
		$this->getWorld()->dropItem($this->getPosition(), ItemFactory::get(ItemIds::RED_MUSHROOM, 0, 5));
		$cow = EntityFactory::create(Cow::class, $this->location->world, EntityFactory::createBaseNBT($this->location, $this->motion, $this->location->yaw, $this->location->pitch));
		if($cow !== null) {
			$this->getWorld()->addEntity($cow);
			$this->flagForDespawn();
			$cow->spawnToAll();
		}
		return $this;
	}
}